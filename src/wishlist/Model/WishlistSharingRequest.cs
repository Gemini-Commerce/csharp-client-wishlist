/*
 * Wishlist Service
 *
 * API for managing wishlists
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = wishlist.Client.OpenAPIDateConverter;

namespace wishlist.Model
{
    /// <summary>
    /// WishlistSharingRequest
    /// </summary>
    [DataContract(Name = "wishlistSharingRequest")]
    public partial class WishlistSharingRequest : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Permission
        /// </summary>
        [DataMember(Name = "permission", EmitDefaultValue = false)]
        public WishlistPermission? Permission { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="WishlistSharingRequest" /> class.
        /// </summary>
        /// <param name="wishlistId">wishlistId.</param>
        /// <param name="permission">permission.</param>
        /// <param name="customerGrn">customerGrn.</param>
        /// <param name="customerAggregationId">customerAggregationId.</param>
        public WishlistSharingRequest(string wishlistId = default(string), WishlistPermission? permission = default(WishlistPermission?), string customerGrn = default(string), string customerAggregationId = default(string))
        {
            this.WishlistId = wishlistId;
            this.Permission = permission;
            this.CustomerGrn = customerGrn;
            this.CustomerAggregationId = customerAggregationId;
        }

        /// <summary>
        /// Gets or Sets WishlistId
        /// </summary>
        [DataMember(Name = "wishlistId", EmitDefaultValue = false)]
        public string WishlistId { get; set; }

        /// <summary>
        /// Gets or Sets CustomerGrn
        /// </summary>
        [DataMember(Name = "customerGrn", EmitDefaultValue = false)]
        public string CustomerGrn { get; set; }

        /// <summary>
        /// Gets or Sets CustomerAggregationId
        /// </summary>
        [DataMember(Name = "customerAggregationId", EmitDefaultValue = false)]
        public string CustomerAggregationId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WishlistSharingRequest {\n");
            sb.Append("  WishlistId: ").Append(WishlistId).Append("\n");
            sb.Append("  Permission: ").Append(Permission).Append("\n");
            sb.Append("  CustomerGrn: ").Append(CustomerGrn).Append("\n");
            sb.Append("  CustomerAggregationId: ").Append(CustomerAggregationId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
